<Window
    x:Class="AppUI.LoginView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:AdonisUI="[AdonisUI ]clr-namespace:AdonisUI;assembly=WPF.UI"
    xmlns:conv="clr-namespace:AppUI.Common.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:AppUI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="clr-namespace:AppUI.Views.UserControls"
    xmlns:view="clr-namespace:AppUI.Views"
    xmlns:vm="clr-namespace:AppUI.ViewModels"
    xmlns:zui="clr-namespace:ZdfFlatUI;assembly=WPF.UI"
    x:Name="_Login"
    Title="Sunny vision login system"
    Background="#FF2D2D30"
    Foreground="White"
    Icon="/Resource/icon.png"
    ResizeMode="NoResize"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    Loaded="_Login_Loaded"
    mc:Ignorable="d">
    <Window.DataContext>
        <vm:LoginViewModel x:Name="LoginVM" />
    </Window.DataContext>
    <Window.Resources>
        <conv:TotalAreaConv x:Key="taConv" />
        <conv:CircularityConv x:Key="cirConv" />
        <conv:ResultConv x:Key="retConv" />
        <conv:BoolenConverter x:Key="boolenConv" />
        <conv:AppModeConv x:Key="appModeConv" />
        <conv:AppModeConvForBottom x:Key="'" />
        <conv:AppModeVisableConv x:Key="appModeVisableConv" />
        <conv:AppModeVisableUserConv x:Key="appModeVisableUserConv" />
        <conv:AppModeControlConv x:Key="appModeControlConv" />
        <conv:SysConfigModeConv x:Key="sysConfigModeConv" />
        <conv:WindowsLocalLeftConv x:Key="windowsLocalLeftConv" />
        <conv:WindowsLocalTopConv x:Key="windowsLocalTopConv" />
        <conv:FullScreenConv x:Key="fullScreenConv" />
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style x:Key="FIcon" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="/Resource/#iconfont" />
            <Setter Property="Foreground" Value="{StaticResource TextBoxBackground}" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="20" />
        </Style>
        <Style x:Key="ToggleButtonStyleTest" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            SnapsToDevicePixels="true">

                            <!--<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->

                            <TextBlock
                                x:Name="textblock"
                                VerticalAlignment="Center"
                                FontSize="15"
                                Foreground="LightGray"
                                Style="{StaticResource FIcon}"
                                Text="&#xe648;" />

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                                <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="textblock" Property="Text" Value="&#xe613;" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButton_LinkLight" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            SnapsToDevicePixels="true">

                            <!--<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->

                            <TextBlock
                                x:Name="textblock"
                                VerticalAlignment="Center"
                                FontSize="23"
                                FontWeight="Bold"
                                Foreground="DarkRed"
                                Style="{StaticResource FIcon}"
                                Text="&#xe6d6;" />

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <!--<Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>-->
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            -->
                            <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            <!--
                            </Trigger>-->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="textblock" Property="Text" Value="&#xe6d7;" />
                                <Setter TargetName="textblock" Property="Foreground" Value="Green" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Window.WindowState>
        <Binding Path="WindowsMin">
            <Binding.Mode>
                TwoWay
            </Binding.Mode>
        </Binding>
    </Window.WindowState>

    <Grid x:Name="mainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*" />
            <ColumnDefinition Width="4*" />
        </Grid.ColumnDefinitions>
        <Grid x:Name="GuidePanel" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="10*" />
            </Grid.RowDefinitions>
            <Border BorderBrush="#66ccff" BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1.1*" />
                        <ColumnDefinition Width="4*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Row="0" Grid.Column="0" Margin="10,10,10,10">
                        <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image Grid.Row="0" Source="/Resource/logo.png" />
                        </Viewbox>

                    </Border>
                    <Border Grid.Row="0" Grid.Column="1">
                        <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock Margin="1,0,5,0" Foreground="#004BB2" FontWeight="Bold">SunnyVM</TextBlock>
                        </Viewbox>

                    </Border>
                </Grid>
            </Border>
            <Border
                Grid.Row="1"
                Grid.Column="1"
                BorderBrush="#3399FF"
                BorderThickness="1">
                <uc:ControlView
                    x:Name="_Guidepanel"
                    Loaded="_Guidepanel_Loaded"
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="1,5,0.5,5" />
            </Border>

        </Grid>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Height="30">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <!--<zui:AnimationButton
                    Grid.Column="0"
                    Margin="10,10,0,10"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Checked="ToggleButton_Checked"
                    Unchecked="ToggleButton_Unchecked" />-->
                <ToggleButton
                    x:Name="Menu_button"
                    Grid.Column="0"
                    Margin="5,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Checked="ToggleButton_Checked"
                    Style="{DynamicResource ToggleButtonStyleTest}"
                    Unchecked="ToggleButton_Unchecked" />

                <TextBlock
                    Grid.Column="0"
                    Margin="28,7,0,7"
                    VerticalAlignment="Center"
                    Foreground="WhiteSmoke"
                    Text="菜单" />
                <zui:Loading Height="20" Width="20"></zui:Loading>
                <Grid Grid.Column="1" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ToggleButton
                        x:Name="LinkLight01"
                        Grid.Column="0"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsChecked="{Binding LinkLight}"
                        IsEnabled="False"
                        Style="{DynamicResource ToggleButton_LinkLight}" />
                    <TextBlock
                        Grid.Column="0"
                        Margin="40,7,0,7"
                        VerticalAlignment="Center"
                        Foreground="WhiteSmoke"
                        Text="工位一" />
                    <ToggleButton
                        x:Name="LinkLight02"
                        Grid.Column="1"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsChecked="{Binding LinkLight}"
                        IsEnabled="False"
                        Style="{DynamicResource ToggleButton_LinkLight}" />
                    <TextBlock
                        Grid.Column="1"
                        Margin="40,7,0,7"
                        VerticalAlignment="Center"
                        Foreground="WhiteSmoke"
                        Text="工位二" />
                    <ToggleButton
                        x:Name="LinkLight03"
                        Grid.Column="2"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsChecked="{Binding LinkLight}"
                        IsEnabled="False"
                        Style="{DynamicResource ToggleButton_LinkLight}" />
                    <TextBlock
                        Grid.Column="2"
                        Margin="40,7,0,7"
                        VerticalAlignment="Center"
                        Foreground="WhiteSmoke"
                        Text="工位三" />
                    <ToggleButton
                        x:Name="LinkLight04"
                        Grid.Column="3"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsChecked="{Binding LinkLight}"
                        IsEnabled="False"
                        Style="{DynamicResource ToggleButton_LinkLight}" />
                    <TextBlock
                        Grid.Column="3"
                        Margin="40,7,0,7"
                        VerticalAlignment="Center"
                        Foreground="WhiteSmoke"
                        Text="工位四" />
                </Grid>
                <TextBlock Grid.Column="5" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" Foreground="#66CCFF" Text="{Binding DataTime}"></TextBlock>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition />
       
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border
                    Grid.Row="0"
                    Grid.Column="0"
                    BorderBrush="#3399FF"
                    BorderThickness="1">
                    <Grid Visibility="{Binding View01, Converter={StaticResource appModeVisableUserConv}}">
                       
                            <uc:MainViewUserControls
                            x:Name="_MainV01"
                            Margin="1,5,0.5,5"
                            Loaded="_MainV01_Loaded" />
                    </Grid>
                </Border>
                <Border
                    Grid.Row="0"
                    Grid.Column="1"
                    BorderBrush="#3399FF"
                    BorderThickness="1">
                    <Grid Visibility="{Binding View02, Converter={StaticResource appModeVisableUserConv}}">
                        <uc:MainViewUserControls
                            x:Name="_MainV02"
                            Margin="1,5,0.5,5"
                            Loaded="_MainV02_Loaded" />
                    </Grid>
                </Border>
                <Border
                    Grid.Row="1"
                    Grid.Column="0"
                    BorderBrush="#3399FF"
                    BorderThickness="1">
                    <Grid Visibility="{Binding View03, Converter={StaticResource appModeVisableUserConv}}">
                        <uc:MainViewUserControls
                            x:Name="_MainV03"
                            Margin="1,5,0.5,5"
                            Loaded="_MainV03_Loaded" />
                    </Grid>
                </Border>
                <Border
                    Grid.Row="1"
                    Grid.Column="1"
                    BorderBrush="#3399FF"
                    BorderThickness="1">
                    <Grid Visibility="{Binding View04, Converter={StaticResource appModeVisableUserConv}}">
                        <uc:MainViewUserControls
                            x:Name="_MainV04"
                            Margin="1,5,0.5,5"
                            Loaded="_MainV04_Loaded" />
                    </Grid>
                </Border>
              
            </Grid>
        </Grid>
    </Grid>



</Window>
